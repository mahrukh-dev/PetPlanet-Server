@page "/adoption-form/"
@page "/adoption-form/{petid}"
@using PetPlanetWebApp.Models
@using Microsoft.AspNetCore.Components.Forms

<style>
    .form-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background: #3498db;
        color: white;
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
    }

    h1 {
        text-align: center;
    }

    form {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
    }

    label {
        font-weight: bold;
        display: block;
        margin-bottom: 8px;
    }

    input[type="text"],
    input[type="number"],
    input[type="email"],
    input[type="tel"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    button {
        padding: 12px 20px;
        border: none;
        border-radius: 5px;
        background: #2ecc71;
        color: white;
        cursor: pointer;
    }

        button:hover {
            background: #27ae60;
        }


</style>

<div class="form-container">
    <h1>Adoption Form</h1>
    <form id="adoptionForm" @onsubmit="SubmitAdoptionForm">
        <p></p>
        <label for="userEmail">Email:</label>
        <input type="email" id="userEmail" @bind="adoptionRequest.UserEmail" name="userEmail" required><br><br>

        <label for="userAddress">Address:</label>
        <input type="text" id="userAddress" @bind="adoptionRequest.UserAddress" name="userAddress" required><br><br>

        <label for="contactNumber">Contact Number:</label>
        <input type="tel" id="contactNumber" @bind="adoptionRequest.ContactNumber" name="contactNumber" required><br><br>

        <label for="userName">Username:</label>
        <input type="text" id="userName" @bind="adoptionRequest.UserName" name="userName" required><br><br>

        <button type="submit" class="btn btn-primary mb-4">Submit Adoption Request</button>
    </form>
</div>

@code {
    [Parameter]
    public string petid { get; set; }

    private int parsedPetId;

    AdoptionRequest adoptionRequest { get; set; } = new AdoptionRequest();
    AdoptedPet adoptedPet { get; set; } = new AdoptedPet();

    protected override void OnInitialized()
    {
        if (int.TryParse(petid, out int result))
        {
            parsedPetId = result;
        }
        else
        {
            // Handle the case where petid is not a valid integer
            // You might want to display an error message or redirect the user.
        }
    }
    private void SubmitAdoptionForm()
    {
        Pet find = new Pet();
        List<Pet> pets = DALServicePets.GetPets();
        foreach (var p in pets)
        {
            if (parsedPetId == p.Id)
            {
                adoptedPet.Name = p.Name;
                adoptedPet.Type = p.Type;
                adoptedPet.Breed = p.Breed;
                adoptedPet.Color = p.Color;
                adoptedPet.Species = p.Species;
                adoptedPet.Age = p.Age;
                adoptedPet.Gender = p.Gender;
                adoptedPet.Size = p.Size;
                adoptedPet.Coat = p.Coat;
                adoptedPet.Description = p.Description;
                adoptedPet.ContactAddress = p.ContactAddress;
                adoptedPet.ContactPhone = p.ContactPhone;
                adoptedPet.ContactEmail = p.ContactEmail;
                adoptedPet.Photo = p.Photo;
            }
        }

        // Do not set the Id explicitly if it's an identity column
        adoptedPet.Id = parsedPetId;

        DALServiceAdoptedPets.InsertAdoptedPet(adoptedPet);
        adoptionRequest.PetId = adoptedPet.Id;
        DALServiceAdoptionRequests.InsertAdoptionRequest(adoptionRequest);

        DALServicePets.DeletePet(parsedPetId);
    }

}
